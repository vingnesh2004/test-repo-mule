name: Build and Deploy to CloudHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipMunitTests

      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
          mv $artifactName1 $artifactName2

      - name: Upload artifact 
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifacts
      
      - name: Deploy to CloudHub
        env:
          USERNAME: ${{ secrets.anypoint_platform_username }}
          PASSWORD: ${{ secrets.anypoint_platform_password }}
          CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
        run: |
          mvn deploy -DskipMunitTests -DmuleDeploy \
           -Dmule.artifact=$artifactName \
           -Danypoint.username="$USERNAME" \
           -Danypoint.password="$PASSWORD" \
           -Danypoint.client.id="$CLIENT_ID" \
           -Danypoint.client.secret="$CLIENT_SECRET" \
           -Dcloudhub.application.name=$artifactName
            -e
